###################################共用配置项（开始）###################################
#[应用必填]应用的名称，也可以在JVM参数中通过-Dproject.name（或-Dspring.application.name=hasentinel）指定，优先读取配置文件中的，读取不到再读取JVM参数中的配置
#project.name=hasentinel  #或  spring.application.name=hasentinel

#[应用选填]ZK的连接配置（如果不配置，系统会自动判断当前是测试环境还是生产环境，并使用相应的配置）
#sentinel.zookeeperAddress = 127.0.0.1:2181

#Sentinel相关的配置项
#[应用选填]Sentinel控制台地址（如果不配置，系统会自动判断当前是测试环境还是生产环境，并使用相应的配置）
#sentinel.sentinelServer = 127.0.0.1:8080

#[应用选填]当前应用往Sentinel控制台注册的端口
#该端口目前主要用于控制台检查应用是否还健康，如果未设置则默认使用54321端口，如果本地启动了多个连接Sentinel控制台的应用，
#导致该端口被其它应用占用了，为了确保应用的顺利启动和正常运行，则会使用30000~40000的随机端口。
#生产环境强烈建议设置，否则不利用应用端口的管理，应用的每次重启，在Sentinel控制台都会显示原来端口的应用不可用
#注：如果应用运行于容器中，该端口要映射出来
#sentinel.apiPort=54321

#日志输出路径，Sentinel默认会将日志输出到用户目录{@code ${user.home}/logs/csp/}下，默认值为{当前应用所在目录}logs/csp
#sentinel.logDir = logs/csp

#默认的日志文件名没有包括PID，但如果在同一台服务器上运行了多个实例，可能需要在日志文件中加上PID用于区分不同的日志文件。
#默认值为true
#sentinel.logUsePid = true

#应用端与控制台的心台检测时间，默认为50秒钟，目前该值不能够大于60秒，如果需要设置大于60秒，需要和控制台的检测参数配合修改
#sentinel.heartbeatIntervalMS = 50000
###################################共用配置项（结束）###################################

###################################WEB应用配置项（开始）###################################
#需要排除Sentinel统计的URL的前缀，多个Rest URL以英文逗号分隔
#sentinel.excludeUrlPrefix = 
###################################WEB应用配置项（结束）###################################



